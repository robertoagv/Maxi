@model WebMaxiFarmacia.Models.NewSaleView

@{
    ViewBag.Title = "Nueva";
}

<h2>Nueva</h2>


@using (Html.BeginForm()) 
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        <h4>Venta</h4>
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <hr />
     
        @* ************** *@

        <div class="row">
            <div class="col-md-6">
                <div class="form-group">
                    <div class="col-md-offset-2 col-md-10">
                        <input type="submit" value="Generar" class="btn btn-primary" />
                        @Html.ActionLink("Regresar", "Index", new { }, new { @class = "btn btn-default" })
                        @Html.ActionLink("Agregar Producto", "AgregarProducto", "Sales", new { }, new { @class = "btn btn-info", autofocus = "autofocus" })
                        @*@Html.ActionLink("Comprar", "Comprar", "Products", new { id = item.inventoryId }, new { @class = "dialog-window btn btn-info btn-xs" })*@
                    </div>
                </div>
            </div>
            <div class="col-md-6">
                <div class="form-group">
                    @Html.LabelFor(model => model.Nombrecte, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Nombrecte, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Nombrecte, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Fechavta, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Fechavta, new { htmlAttributes = new { @class = "form-control" } })
                       
                        @Html.ValidationMessageFor(model => model.Fechavta, "", new { @class = "text-danger" })
                        
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.UserId, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.HiddenFor(model => model.UserId)
                        @Html.ValidationMessageFor(model => model.UserId, "", new { @class = "text-danger" })
                        
                        <input type="text" name="name" value="@ViewBag.UserId" disabled  class="form-control"/>
                     
                    </div>
                </div>

            </div>
            
        </div>
    </div>
}

<h4>Detalles</h4>
<hr />
@if (Model.Detalles.Count == 0)
{
    <div class="alert alert-info">
        No se ha agregado Producto.
    </div>
}
else
{
    
    <table class="table table-bordered table-striped table-hover">
        <thead>
            <tr>
                <th class="text-center">
                    @Html.DisplayNameFor(model => model.Detalles[0].Descriptionpro)
                </th>
                <th class="text-center">
                    @Html.DisplayNameFor(model => model.Detalles[0].Precio)
                </th>
                <th class="text-center">
                    @Html.DisplayNameFor(model => model.Detalles[0].Cantidad)
                </th>
                <th class="text-center">
                    Total
                </th>
                <th class="text-center">
                    Accion
                </th>
            </tr>
        </thead>

        @foreach (var item in Model.Detalles)
        {
            <tr>
                <td class="text-center">
                    @Html.DisplayFor(modelItem => item.Descriptionpro)
                </td>
                <td class="text-right">
                    @Html.DisplayFor(modelItem => item.Precio)
                </td>
                <td class="text-right">
                    @Html.DisplayFor(modelItem => item.Cantidad)
                </td>
                <td class="text-right">
                    @Html.DisplayFor(modelItem => item.Valor)
                </td>
                <td class="text-center">
                    @Html.ActionLink("Quitar", "DeleteProductList", new { id = item.ProductId }, new { @class = "btn btn-danger btn-xs", onclick = "return confirm('Esta seguro de Quitar este producto?')"})
                </td>
            </tr>
        }
            <tr>
                <td>

                </td>
                <td class="text-right">
                    <strong>Total</strong>
                </td>
                <td class="text-right">
                    <strong>
                        @Html.DisplayFor(modelItem => Model.TotalCantidad)
                    </strong>
                </td>
                <td class="text-right">
                    <strong>
                        @Html.DisplayFor(modelItem => Model.TotalValue)
                    </strong>
                </td>
                <td></td>
            </tr>

    </table>
}




@section Scripts{
   
    @Scripts.Render("~/bundles/jqueryval")

}